{"version":3,"sources":["../main.js"],"names":["electron","require","app","BrowserWindow","path","url","__dirname","mainWindow","createWindow","width","height","loadURL","format","pathname","join","protocol","slashes","on","process","platform","quit"],"mappings":";;AAAA,IAAMA,WAAWC,QAAQ,UAAR,CAAjB;AACA;AACA,IAAMC,MAAMF,SAASE,GAArB;AACA;AACA,IAAMC,gBAAgBH,SAASG,aAA/B;;AAEA,IAAMC,OAAOH,QAAQ,MAAR,CAAb;AACA,IAAMI,MAAMJ,QAAQ,KAAR,CAAZ;;AAEAA,QAAQ,iBAAR,EAA2BK,SAA3B,EAAsC;AACpCN,YAAUA;AAD0B,CAAtC;;AAIA;AACA;AACA,IAAIO,mBAAJ;;AAEA,SAASC,YAAT,GAAwB;AACtB;AACAD,eAAa,IAAIJ,aAAJ,CAAkB,EAAEM,OAAO,GAAT,EAAcC,QAAQ,GAAtB,EAAlB,CAAb;;AAEA;AACAH,aAAWI,OAAX,CACEN,IAAIO,MAAJ,CAAW;AACTC,cAAUT,KAAKU,IAAL,CAAUR,SAAV,EAAqB,YAArB,CADD;AAETS,cAAU,OAFD;AAGTC,aAAS;AAHA,GAAX,CADF;;AAQA;AACA;;AAEA;AACAT,aAAWU,EAAX,CAAc,QAAd,EAAwB,YAAW;AACjC;AACA;AACA;AACAV,iBAAa,IAAb;AACD,GALD;AAMD;;AAED;AACA;AACA;AACAL,IAAIe,EAAJ,CAAO,OAAP,EAAgBT,YAAhB;;AAEA;AACAN,IAAIe,EAAJ,CAAO,mBAAP,EAA4B,YAAW;AACrC;AACA;AACA,MAAIC,QAAQC,QAAR,KAAqB,QAAzB,EAAmC;AACjCjB,QAAIkB,IAAJ;AACD;AACF,CAND;;AAQAlB,IAAIe,EAAJ,CAAO,UAAP,EAAmB,YAAW;AAC5B;AACA;AACA,MAAIV,eAAe,IAAnB,EAAyB;AACvBC;AACD;AACF,CAND;;AAQA;AACA","file":"main.js","sourcesContent":["const electron = require(\"electron\");\n// Module to control application life.\nconst app = electron.app;\n// Module to create native browser window.\nconst BrowserWindow = electron.BrowserWindow;\n\nconst path = require(\"path\");\nconst url = require(\"url\");\n\nrequire(\"electron-reload\")(__dirname, {\n  electron: electron\n});\n\n// Keep a global reference of the window object, if you don't, the window will\n// be closed automatically when the JavaScript object is garbage collected.\nlet mainWindow;\n\nfunction createWindow() {\n  // Create the browser window.\n  mainWindow = new BrowserWindow({ width: 800, height: 600 });\n\n  // and load the index.html of the app.\n  mainWindow.loadURL(\n    url.format({\n      pathname: path.join(__dirname, \"index.html\"),\n      protocol: \"file:\",\n      slashes: true\n    })\n  );\n\n  // Open the DevTools.\n  // mainWindow.webContents.openDevTools();\n\n  // Emitted when the window is closed.\n  mainWindow.on(\"closed\", function() {\n    // Dereference the window object, usually you would store windows\n    // in an array if your app supports multi windows, this is the time\n    // when you should delete the corresponding element.\n    mainWindow = null;\n  });\n}\n\n// This method will be called when Electron has finished\n// initialization and is ready to create browser windows.\n// Some APIs can only be used after this event occurs.\napp.on(\"ready\", createWindow);\n\n// Quit when all windows are closed.\napp.on(\"window-all-closed\", function() {\n  // On OS X it is common for applications and their menu bar\n  // to stay active until the user quits explicitly with Cmd + Q\n  if (process.platform !== \"darwin\") {\n    app.quit();\n  }\n});\n\napp.on(\"activate\", function() {\n  // On OS X it's common to re-create a window in the app when the\n  // dock icon is clicked and there are no other windows open.\n  if (mainWindow === null) {\n    createWindow();\n  }\n});\n\n// In this file you can include the rest of your app's specific main process\n// code. You can also put them in separate files and require them here.\n"]}