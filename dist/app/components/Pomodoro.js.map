{"version":3,"sources":["../../../app/components/Pomodoro.js"],"names":["React","require","moment","Pomodoro","props","state","currentTime","duration","timerState","timerInterval","startTimer","bind","stopTimer","resetTimer","substractSecond","setState","setInterval","clearTimeout","newTime","subtract","Component"],"mappings":"AAAA;;;;;;;;AAKA;;;;AACA;;;;;;;;;;;;AAJA,IAAMA,QAAQC,QAAQ,OAAR,CAAd;AACA,IAAMC,SAASD,QAAQ,QAAR,CAAf;;IAKME,Q;;;AACJ,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA,oHACXA,KADW;;AAEjB,UAAKC,KAAL,GAAa;AACXC,mBAAaJ,OAAOK,QAAP,CAAgB,EAAhB,EAAoB,SAApB,CADF;AAEXC,kBAAY,CAFD;AAGXC,qBAAe;AAHJ,KAAb;;AAMA,UAAKC,UAAL,GAAkB,MAAKA,UAAL,CAAgBC,IAAhB,OAAlB;AACA,UAAKC,SAAL,GAAiB,MAAKA,SAAL,CAAeD,IAAf,OAAjB;AACA,UAAKE,UAAL,GAAkB,MAAKA,UAAL,CAAgBF,IAAhB,OAAlB;AACA,UAAKG,eAAL,GAAuB,MAAKA,eAAL,CAAqBH,IAArB,OAAvB;AAXiB;AAYlB;;;;iCACY;AACX,UAAI,KAAKN,KAAL,CAAWG,UAAX,IAAyB,CAA7B,EAAgC;AAC9B;AACA,aAAKO,QAAL,CAAc;AACZP,sBAAY,CADA;AAEZC,yBAAeO,YAAY,KAAKF,eAAjB,EAAkC,IAAlC;AAFH,SAAd;AAID;AACF;;;gCACW;AACV,UAAI,KAAKT,KAAL,CAAWG,UAAX,IAAyB,CAA7B,EAAgC;AAC9B;AACA,YAAI,KAAKH,KAAL,CAAWI,aAAf,EAA8B;AAC5BQ,uBAAa,KAAKZ,KAAL,CAAWI,aAAxB;AACD;AACD,aAAKM,QAAL,CAAc;AACZP,sBAAY;AADA,SAAd;AAGD;AACF;;;iCACY;AACX,UAAI,KAAKH,KAAL,CAAWI,aAAf,EAA8B;AAC5BQ,qBAAa,KAAKZ,KAAL,CAAWI,aAAxB;AACD;AACD,WAAKM,QAAL,CAAc;AACZP,oBAAY,CADA;AAEZF,qBAAaJ,OAAOK,QAAP,CAAgB,EAAhB,EAAoB,SAApB;AAFD,OAAd;AAID;;;sCACiB;AAChB,UAAMW,UAAUhB,OAAOK,QAAP,CAAgB,KAAKF,KAAL,CAAWC,WAA3B,CAAhB;AACAY,cAAQC,QAAR,CAAiB,CAAjB,EAAoB,SAApB;AACA,WAAKJ,QAAL,CAAc,EAAET,aAAaY,OAAf,EAAd;AACD;;;6BACQ;AACP,aACE;AAAA;AAAA,UAAK,WAAU,6BAAf;AACE;AAAA;AAAA,YAAI,WAAU,eAAd;AAAA;AAAA,SADF;AAEE,+CAAO,aAAa,KAAKb,KAAL,CAAWC,WAA/B,GAFF;AAGE;AACE,sBAAY,KAAKI,UADnB;AAEE,qBAAW,KAAKE,SAFlB;AAGE,sBAAY,KAAKC;AAHnB;AAHF,OADF;AAWD;;;;EA5DoBb,MAAMoB,S;;kBA+DdjB,Q","file":"Pomodoro.js","sourcesContent":["\"use strict\";\n\nconst React = require(\"react\");\nconst moment = require(\"moment\");\n\nimport Buttons from \"./Buttons\";\nimport Timer from \"./Timer\";\n\nclass Pomodoro extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentTime: moment.duration(25, \"minutes\"),\n      timerState: 0,\n      timerInterval: null\n    };\n\n    this.startTimer = this.startTimer.bind(this);\n    this.stopTimer = this.stopTimer.bind(this);\n    this.resetTimer = this.resetTimer.bind(this);\n    this.substractSecond = this.substractSecond.bind(this);\n  }\n  startTimer() {\n    if (this.state.timerState != 1) {\n      // If not running\n      this.setState({\n        timerState: 1,\n        timerInterval: setInterval(this.substractSecond, 1000)\n      });\n    }\n  }\n  stopTimer() {\n    if (this.state.timerState == 1) {\n      //If running\n      if (this.state.timerInterval) {\n        clearTimeout(this.state.timerInterval);\n      }\n      this.setState({\n        timerState: 2\n      });\n    }\n  }\n  resetTimer() {\n    if (this.state.timerInterval) {\n      clearTimeout(this.state.timerInterval);\n    }\n    this.setState({\n      timerState: 0,\n      currentTime: moment.duration(25, \"minutes\")\n    });\n  }\n  substractSecond() {\n    const newTime = moment.duration(this.state.currentTime);\n    newTime.subtract(1, \"seconds\");\n    this.setState({ currentTime: newTime });\n  }\n  render() {\n    return (\n      <div className=\"container has-text-centered\">\n        <h3 className=\"subtitle is-4\">React Pomodoro Timer</h3>\n        <Timer currentTime={this.state.currentTime} />\n        <Buttons\n          startTimer={this.startTimer}\n          stopTimer={this.stopTimer}\n          resetTimer={this.resetTimer}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Pomodoro;\n"]}